// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String? // Hashed
  name      String?
  phone     String?
  location  String?
  avatarUrl String?
  role      Role      @default(USER) // Enum: USER, ADMIN, MODERATOR
  ads       Ad[]
  favorites Ad[]      @relation("UserFavorites")
  messages  Message[] @relation("UserMessages")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Ad {
  id          String   @id @default(uuid())
  title       String
  description String   @db.Text
  price       Float?
  category    String
  subcategory String?
  location    String
  images      String[] // Array of URLs
  status      AdStatus @default(ACTIVE) // Enum: ACTIVE, SOLD, DELETED
  views       Int      @default(0)
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  favoritedBy User[]   @relation("UserFavorites")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Message {
  id         String   @id @default(uuid())
  content    String   @db.Text
  senderId   String
  receiverId String
  adId       String?
  sender     User     @relation("UserMessages", fields: [senderId], references: [id], onDelete: Cascade)
  // No direct relation to receiver to avoid cycle issues with sender
  createdAt  DateTime @default(now())
}

enum Role {
  USER
  ADMIN
  MODERATOR
}

enum AdStatus {
  ACTIVE
  SOLD
  DELETED
  PENDING_REVIEW
}
